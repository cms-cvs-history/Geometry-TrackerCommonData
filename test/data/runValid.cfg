process PROD  = 
	{
	service = MessageLogger {
		vstring destinations = {"stndoutput.txt",
					"error.txt",
					"warning.txt"    }
		PSet error.txt       = { string threshold = "ERROR"   }
		PSet stndoutput.txt  = { string threshold = "INFO"    } 
		PSet warning.txt     = { string threshold = "WARNING" }
	}
	service = RandomNumberGeneratorService {
		untracked uint32 sourceSeed = 135799753
		PSet moduleSeeds = {
			untracked uint32 VtxSmeared = 123456789
		}
	}

	source = FlatRandomEGunSource {
		untracked int32 maxEvents = 10000
		untracked PSet PGunParameters = {
			untracked vint32 PartID = { 14 }
			untracked double MinEta = 0.0
			untracked double MaxEta = 2.5
			untracked double MinPhi = -3.14159265358979323846
			untracked double MaxPhi =  3.14159265358979323846
			untracked double MinE  = 9.99
			untracked double MaxE  = 10.01
		}
		untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	}

	module VtxSmeared = VertexGenerator  {
		string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
		double MeanX = 0.
		double MeanY = 0.
		double MeanZ = 0.
		double SigmaX = 0.0001
		double SigmaY = 0.0001
		double SigmaZ = 0.0001  // in mm (as in COBRA/OSCAR)
	}


	#Geometry
	include "Geometry/TrackerCommonData/data/tobGeometryXML.cfi"

	module o1 = PoolOutputModule { untracked string fileName = "simevent.root" }
	module SimG4Object = OscarProducer { 

		bool NonBeamEvent = false
		untracked int32 RunNumber = 1001
		untracked int32 G4EventManagerVerbosity = 0
		int32 G4StackManagerVerbosity = 0
		int32 G4TrackingManagerVerbosity = 0
		bool UseMagneticField = false
		bool OverrideUserStackingAction = true
		bool StoreRndmSeeds = false
		bool RestoreRndmSeeds = false
		string PhysicsTablesDirectory = "PhysicsTables"
		bool StorePhysicsTables = false
		bool RestorePhysicsTables = false
			#VPSet Watchers = {
			#	{ string type = "SimTracer"
			#	  bool verbose = true }
			#}
		PSet MagneticField = {
			double delta = 1.
		}
		PSet Physics = {
			string type = "SimG4Core/Physics/DummyPhysics"
			#bool DummyEMPhysics = true
			bool DummyEMPhysics = false
			bool CutsPerRegion = true
			double DefaultCutValue = 10.
			untracked int32 Verbosity = 0			
		}
		PSet Generator = {
			bool ApplyPtCuts = true
			bool ApplyEtaCuts = true
			bool ApplyPhiCuts = false
			double MinPhiCut = 0.
			double MaxPhiCut = 360.
			double MinEtaCut = -5.5
			double MaxEtaCut = 5.5
			double MinPtCut = 40.
			double MaxPtCut = 999999.
			untracked int32 Verbosity = 0
		}

		PSet RunAction = { string StopFile = "StopRun" }
		PSet EventAction = {
			bool CollapsePrimaryVertices = false
			string StopFile = "StopRun"
				untracked bool debug = false
		}
		PSet TrackingAction = { untracked bool DetailedTiming = false }
		PSet UtilityActions = {
			string type = "SimG4Core/UtilityAction/TrackingVerboseAction"
			untracked bool  DEBUG = false
			untracked bool  CheckForHighEtPhotons = false
			untracked int32 EventMin = 0
			untracked int32 EventMax = 0
			untracked int32 EventStep = 1
			untracked int32 TrackMin = 0
			untracked int32 TrackMax = 0
			untracked int32 TrackStep = 1
			untracked int32 VerboseLevel = 0
		}
		PSet SteppingAction = {
			bool   KillBeamPipe = true
			double CriticalEnergyForVacuum = 2.0
			double CriticalDensity = 1.e-25
			untracked int32  Verbosity = 0
		}
		VPSet Watchers = {
			{
			string type = "MaterialBudgetAction" 
			PSet MaterialBudgetAction = {
				string HistosFile = "matbdgtobC.root"
				string TextFile = "None"
				string TreeFile = "None"
				bool AllStepsToTree = 0
			} }
		}


	}
	path p1 = { VtxSmeared, SimG4Object} 
	endpath ep ={o1}
	}		
